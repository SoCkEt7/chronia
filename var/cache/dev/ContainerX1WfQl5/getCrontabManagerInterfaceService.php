<?php

namespace ContainerX1WfQl5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCrontabManagerInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\CrontabManager\CrontabManagerInterface' shared autowired service.
     *
     * @return \App\Service\CrontabManager\CrontabManagerInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Service/CrontabManager/CrontabManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Service/CrontabManager/CrontabManagerFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        return $container->privates['App\\Service\\CrontabManager\\CrontabManagerInterface'] = (new \App\Service\CrontabManager\CrontabManagerFactory(($container->privates['App\\Service\\Platform\\PlatformHandlerInterface'] ?? $container->load('getPlatformHandlerInterfaceService')), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), ($container->privates['filesystem'] ??= new \Symfony\Component\Filesystem\Filesystem()), $container->getEnv('default:app.data_path_default:DATA_PATH'), $container->getEnv('default:app.log_path_default:LOG_PATH'), (\dirname(__DIR__, 3).'/tmp'), $container->parameters['allowed_commands'], 'dev', $container->getEnv('default:app.default_crontab_user:DEFAULT_CRONTAB_USER')))->createManager();
    }
}
